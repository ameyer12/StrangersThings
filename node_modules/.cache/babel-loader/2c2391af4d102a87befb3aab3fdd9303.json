{"ast":null,"code":"var _jsxFileName = \"/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\n// import React, { Fragment } from \"react\";\n// import { Paper, Button } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n// import Createpost from \"./CreatePost\";\n// import { deletePost } from '../api';\n// import \"./posts.css\"\n// const postMatches = (post, searchTerm) => {\n//     const searchTermLower = searchTerm.toLowerCase();\n//     const {\n//       description,\n//       location,\n//       title,\n//       author: { username },\n//     } = post;\n//     const toMatch = [description, location, title, username];\n//     for (let i = 0; i < toMatch.length; i++) {\n//       const field = toMatch[i];\n//       if (field.toLowerCase().includes(searchTermLower)) {\n//         return true;\n//       }\n//     }\n//   };\n// const Post = ({ posts, token, fetchPosts }) => {\n//     return (\n//         <div>\n//             <Button\n//                 className=\"create-post-button\"\n//                 variant=\"outlined\"\n//             >\n//             <Link className=\"create-post-link\" to=\"/createpost\" element={<Createpost />}>Create Post</Link>\n//             </Button>\n//             <input type=\"text\" placeholder=\"Search Posts\"></input>\n//             <Button\n//                 variant=\"outlined\"\n//             >Search</Button>\n//             {/* <input\n//           type=\"text\"\n//           placeholder=\"Search Posts\"\n//           value={searchTerm}\n//         //   onChange={(event) => {\n//         //     setSearchTerm(event.target.value);\n//         //   }\n//         ></input> */}\n//         {\n//             posts.map((post) => {\n//                 const { description, location, price, title, _id, isAuthor } = post\n//                 return (\n//                     <Paper\n//                     style={{margin:\"1rem\"}}\n//                     elevation={5}\n//                     key={_id}\n//                     >\n//                     <Fragment>\n//                     <div>\n//                         <h3>{title}</h3>\n//                         <p>Description: {description}</p>\n//                         <p>Price: {price}</p>\n//                         <p>Location: {location}</p>\n//                         {\n//                             isAuthor ? (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                     <Link \n//                                     className=\"edit-link\"\n//                                     to={`/posts/edit-post/${_id}`}\n//                                     >Edit</Link>\n//                                 </Button>\n//                             ) : (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                 <Link className=\"view-link\" to={`/posts/${_id}`}>View</Link>\n//                                 </Button>\n//                             )\n//                         }\n//                          {\n//                             isAuthor ? (\n//                                 <Button\n//                                     color=\"error\"\n//                                     variant=\"outlined\"\n//                                     onClick={() => {\n//                                         deletePost(_id, token)\n//                                         fetchPosts()\n//                                     }}\n//                                 >Delete</Button>\n//                             ) : (\n//                                 <p></p>\n//                             )\n//                         }\n//                     </div>\n//                     </Fragment>\n//                     </Paper>\n//                 )\n//             })\n//         }\n//         </div>\n//     )\n// }\n// export default Post\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SinglePost } from \"./SinglePost\";\nimport { callApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst method = \"DELETE\";\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: {\n      username\n    }\n  } = post;\n  const toMatch = [description, location, title, username];\n\n  for (let i = 0; i < toMatch.length; i++) {\n    const field = toMatch[i];\n\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    setPosts,\n    userData\n  } = _ref;\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const postsToDisplay = posts.filter(post => postMatches(post, searchTerm));\n\n  const handleSubmit = async postId => {\n    const API_URL = `/posts/${postId}`;\n    event.preventDefault();\n\n    try {\n      await callApi({\n        url: API_URL,\n        method: method,\n        token: token\n      });\n      const remainingPosts = posts.filter(post => post._id !== postId);\n      setPosts(remainingPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Posts\",\n        value: searchTerm,\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), postsToDisplay.length ? postsToDisplay.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-info\",\n      style: {\n        border: \"2px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push(`/posts/${post._id}`),\n          children: \"Tell me more!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"seller\",\n        children: [\"Seller: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: [\"Description: \", post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), post.author.username === userData.username ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSubmit(post._id),\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }, this) : null]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There are no matching posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"Pi8pI0TMiAPYDWrmvrKP6jGRPKY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useHistory","SinglePost","callApi","method","postMatches","post","searchTerm","searchTermLower","toLowerCase","description","location","title","author","username","toMatch","i","length","field","includes","Posts","posts","token","setPosts","userData","history","setSearchTerm","postsToDisplay","filter","handleSubmit","postId","API_URL","event","preventDefault","url","remainingPosts","_id","error","console","target","value","map","border","push"],"sources":["/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/components/Posts.js"],"sourcesContent":["// import React, { Fragment } from \"react\";\n// import { Paper, Button } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n// import Createpost from \"./CreatePost\";\n// import { deletePost } from '../api';\n// import \"./posts.css\"\n\n// const postMatches = (post, searchTerm) => {\n//     const searchTermLower = searchTerm.toLowerCase();\n//     const {\n//       description,\n//       location,\n//       title,\n//       author: { username },\n//     } = post;\n  \n//     const toMatch = [description, location, title, username];\n  \n//     for (let i = 0; i < toMatch.length; i++) {\n//       const field = toMatch[i];\n//       if (field.toLowerCase().includes(searchTermLower)) {\n//         return true;\n//       }\n//     }\n//   };\n\n\n// const Post = ({ posts, token, fetchPosts }) => {\n\n//     return (\n//         <div>\n//             <Button\n//                 className=\"create-post-button\"\n//                 variant=\"outlined\"\n//             >\n//             <Link className=\"create-post-link\" to=\"/createpost\" element={<Createpost />}>Create Post</Link>\n//             </Button>\n//             <input type=\"text\" placeholder=\"Search Posts\"></input>\n//             <Button\n//                 variant=\"outlined\"\n//             >Search</Button>\n//             {/* <input\n//           type=\"text\"\n//           placeholder=\"Search Posts\"\n//           value={searchTerm}\n//         //   onChange={(event) => {\n//         //     setSearchTerm(event.target.value);\n//         //   }\n//         ></input> */}\n//         {\n//             posts.map((post) => {\n//                 const { description, location, price, title, _id, isAuthor } = post\n//                 return (\n//                     <Paper\n//                     style={{margin:\"1rem\"}}\n//                     elevation={5}\n//                     key={_id}\n//                     >\n//                     <Fragment>\n//                     <div>\n//                         <h3>{title}</h3>\n//                         <p>Description: {description}</p>\n//                         <p>Price: {price}</p>\n//                         <p>Location: {location}</p>\n//                         {\n//                             isAuthor ? (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                     <Link \n//                                     className=\"edit-link\"\n//                                     to={`/posts/edit-post/${_id}`}\n//                                     >Edit</Link>\n//                                 </Button>\n//                             ) : (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                 <Link className=\"view-link\" to={`/posts/${_id}`}>View</Link>\n//                                 </Button>\n//                             )\n//                         }\n//                          {\n//                             isAuthor ? (\n//                                 <Button\n//                                     color=\"error\"\n//                                     variant=\"outlined\"\n//                                     onClick={() => {\n//                                         deletePost(_id, token)\n//                                         fetchPosts()\n//                                     }}\n//                                 >Delete</Button>\n//                             ) : (\n//                                 <p></p>\n//                             )\n//                         }\n//                     </div>\n//                     </Fragment>\n//                     </Paper>\n//                 )\n//             })\n//         }\n//         </div>\n//     )\n// }\n\n// export default Post\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SinglePost } from \"./SinglePost\";\nimport { callApi } from \"../api\";\n\nconst method = \"DELETE\";\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (let i = 0; i < toMatch.length; i++) {\n    const field = toMatch[i];\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts, token, setPosts, userData }) => {\n    const history = useHistory();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n  \n    const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n  \n    const handleSubmit = async (postId) => {\n      const API_URL = `/posts/${postId}`;\n      event.preventDefault();\n      try {\n        await callApi({\n          url: API_URL,\n          method: method,\n          token: token,\n        });\n        const remainingPosts = posts.filter((post) => post._id !== postId);\n        setPosts(remainingPosts);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n<>\n      <div id=\"posts-nav\">\n        <h2 className=\"page-title\">Posts</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search Posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div\n            className=\"post-info\"\n            key={post._id}\n            style={{ border: \"2px solid black\" }}\n          >\n            <div id=\"title-button\">\n              <span className=\"post-title\">{post.title}</span>\n              <button onClick={() => history.push(`/posts/${post._id}`)}>\n                Tell me more!\n              </button>\n            </div>\n            <div id=\"seller\">Seller: {post.author.username}</div>\n            <div className=\"location\">Location: {post.location}</div>\n            <div className=\"description\">Description: {post.description}</div>\n\n            {post.author.username === userData.username ? (\n              <button onClick={() => handleSubmit(post._id)}>\n                Delete Post\n              </button>\n            ) : null}\n          </div>\n        ))\n      ) : (\n        <div>\n          <h1>There are no matching posts...</h1>\n        </div>\n      )}\n    </>\n\n\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;;;AAEA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;EACxC,MAAMC,eAAe,GAAGD,UAAU,CAACE,WAAX,EAAxB;EACA,MAAM;IACJC,WADI;IAEJC,QAFI;IAGJC,KAHI;IAIJC,MAAM,EAAE;MAAEC;IAAF;EAJJ,IAKFR,IALJ;EAOA,MAAMS,OAAO,GAAG,CAACL,WAAD,EAAcC,QAAd,EAAwBC,KAAxB,EAA+BE,QAA/B,CAAhB;;EAEA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IACvC,MAAME,KAAK,GAAGH,OAAO,CAACC,CAAD,CAArB;;IACA,IAAIE,KAAK,CAACT,WAAN,GAAoBU,QAApB,CAA6BX,eAA7B,CAAJ,EAAmD;MACjD,OAAO,IAAP;IACD;EACF;AACF,CAjBD;;AAmBA,MAAMY,KAAK,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAAEC,KAAF;IAASC,KAAT;IAAgBC,QAAhB;IAA0BC;EAA1B,CAAyC;EACpD,MAAMC,OAAO,GAAGxB,UAAU,EAA1B;EACA,MAAM,CAACM,UAAD,EAAamB,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;EAEA,MAAM2B,cAAc,GAAGN,KAAK,CAACO,MAAN,CAActB,IAAD,IAAUD,WAAW,CAACC,IAAD,EAAOC,UAAP,CAAlC,CAAvB;;EAEA,MAAMsB,YAAY,GAAG,MAAOC,MAAP,IAAkB;IACrC,MAAMC,OAAO,GAAI,UAASD,MAAO,EAAjC;IACAE,KAAK,CAACC,cAAN;;IACA,IAAI;MACF,MAAM9B,OAAO,CAAC;QACZ+B,GAAG,EAAEH,OADO;QAEZ3B,MAAM,EAAEA,MAFI;QAGZkB,KAAK,EAAEA;MAHK,CAAD,CAAb;MAKA,MAAMa,cAAc,GAAGd,KAAK,CAACO,MAAN,CAActB,IAAD,IAAUA,IAAI,CAAC8B,GAAL,KAAaN,MAApC,CAAvB;MACAP,QAAQ,CAACY,cAAD,CAAR;IACD,CARD,CAQE,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD;EACF,CAdD;;EAgBJ;EAAA;IAAA,wBACM;MAAK,EAAE,EAAC,WAAR;MAAA,wBACE;QAAI,SAAS,EAAC,YAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,cAFd;QAGE,KAAK,EAAE9B,UAHT;QAIE,QAAQ,EAAGyB,KAAD,IAAW;UACnBN,aAAa,CAACM,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAb;QACD;MANH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADN,EAYOb,cAAc,CAACV,MAAf,GACCU,cAAc,CAACc,GAAf,CAAoBnC,IAAD,iBACjB;MACE,SAAS,EAAC,WADZ;MAGE,KAAK,EAAE;QAAEoC,MAAM,EAAE;MAAV,CAHT;MAAA,wBAKE;QAAK,EAAE,EAAC,cAAR;QAAA,wBACE;UAAM,SAAS,EAAC,YAAhB;UAAA,UAA8BpC,IAAI,CAACM;QAAnC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAE,MAAMa,OAAO,CAACkB,IAAR,CAAc,UAASrC,IAAI,CAAC8B,GAAI,EAAhC,CAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAWE;QAAK,EAAE,EAAC,QAAR;QAAA,uBAA0B9B,IAAI,CAACO,MAAL,CAAYC,QAAtC;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE;QAAK,SAAS,EAAC,UAAf;QAAA,yBAAqCR,IAAI,CAACK,QAA1C;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAaE;QAAK,SAAS,EAAC,aAAf;QAAA,4BAA2CL,IAAI,CAACI,WAAhD;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,EAeGJ,IAAI,CAACO,MAAL,CAAYC,QAAZ,KAAyBU,QAAQ,CAACV,QAAlC,gBACC;QAAQ,OAAO,EAAE,MAAMe,YAAY,CAACvB,IAAI,CAAC8B,GAAN,CAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,GAIG,IAnBN;IAAA,GAEO9B,IAAI,CAAC8B,GAFZ;MAAA;MAAA;MAAA;IAAA,QADF,CADD,gBAyBC;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QArCR;EAAA;AA4CC,CAlED;;GAAMhB,K;UACcnB,U;;;KADdmB,K"},"metadata":{},"sourceType":"module"}