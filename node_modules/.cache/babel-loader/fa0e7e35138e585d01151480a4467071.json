{"ast":null,"code":"const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT';\nexport const getPosts = async token => {\n  try {\n    const response = await fetch(`${baseURL}/posts`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const results = response.json();\n    con;\n    return results;\n  } catch (error) {\n    console.log(\"error getting all posts\");\n  }\n};\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    });\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log('error registering user');\n  }\n};\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    });\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log(\"error logging in\");\n  }\n};\nexport const getUserDetails = async token => {\n  try {\n    const response = await fetch(`${baseURL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log('this is an error message');\n  }\n};\nexport const testData = async token => {\n  try {\n    const response = await fetch(`${baseURL}/test/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log(\"this is an error message\");\n  }\n};","map":{"version":3,"names":["baseURL","getPosts","token","response","fetch","headers","results","json","con","error","console","log","registerUser","username","password","method","body","JSON","stringify","user","loginUser","getUserDetails","testData"],"sources":["/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/api/index.js"],"sourcesContent":["const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT'\n\nexport const getPosts = async (token) => {\n    try {\n      const response = await fetch(`${baseURL}/posts`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n      });\n      const results = response.json();\n      con\n      return(results);\n    } catch (error) {\n        console.log(\"error getting all posts\")\n    }\n}\n\nexport const registerUser = async(username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    })\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log('error registering user')\n  }\n}\n\n\nexport const loginUser = async(username, password) => {\n  try {\n    const response = await fetch(`${baseURL}/users/login`, {\n  method: \"POST\",\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    user: {\n      username: username,\n      password: password\n    }\n  }\n  )}\n  )\n  const results = response.json();\n  return results;\n  } catch (error) {\n    console.log(\"error logging in\")\n  }\n}\n\n\nexport const getUserDetails = async (token) => {\n  try {\n    const response = await fetch(`${baseURL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n    })\n    const results = response.json()\n    return results;\n  } catch (error) {\n    console.log('this is an error message')\n  }\n}\n\nexport const testData = async (token) => {\n  try {\n    const response = await fetch(`${baseURL}/test/me`, { headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }})\n    const results = response.json()\n    return results;\n  } catch (error) {\n    console.log(\"this is an error message\")\n  }\n}\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAiB;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,QAAZ,EAAqB;MAC7CK,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAkB,UAASH,KAAM;MAF1B;IADoC,CAArB,CAA5B;IAMA,MAAMI,OAAO,GAAGH,QAAQ,CAACI,IAAT,EAAhB;IACAC,GAAG;IACH,OAAOF,OAAP;EACD,CAVD,CAUE,OAAOG,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ;EACH;AACJ,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EACvD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,iBAAZ,EAA8B;MACxDe,MAAM,EAAE,MADgD;MAExDV,OAAO,EAAE;QACP,gBAAgB;MADT,CAF+C;MAKxDW,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJN,QAAQ,EAAEA,QADN;UAEJC,QAAQ,EAAEA;QAFN;MADa,CAAf;IALkD,CAA9B,CAA5B;IAYA,MAAMR,OAAO,GAAGH,QAAQ,CAACI,IAAT,EAAhB;IACA,OAAOD,OAAP;EACD,CAfD,CAeE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACD;AACF,CAnBM;AAsBP,OAAO,MAAMS,SAAS,GAAG,OAAMP,QAAN,EAAgBC,QAAhB,KAA6B;EACpD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,cAAZ,EAA2B;MACzDe,MAAM,EAAE,MADiD;MAEzDV,OAAO,EAAE;QACP,gBAAgB;MADT,CAFgD;MAKzDW,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJN,QAAQ,EAAEA,QADN;UAEJC,QAAQ,EAAEA;QAFN;MADa,CAAf;IALmD,CAA3B,CAA5B;IAaF,MAAMR,OAAO,GAAGH,QAAQ,CAACI,IAAT,EAAhB;IACA,OAAOD,OAAP;EACC,CAhBD,CAgBE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACD;AACF,CApBM;AAuBP,OAAO,MAAMU,cAAc,GAAG,MAAOnB,KAAP,IAAiB;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,WAAZ,EAAwB;MAClDK,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAkB,UAASH,KAAM;MAF1B;IADyC,CAAxB,CAA5B;IAMA,MAAMI,OAAO,GAAGH,QAAQ,CAACI,IAAT,EAAhB;IACA,OAAOD,OAAP;EACD,CATD,CASE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,0BAAZ;EACD;AACF,CAbM;AAeP,OAAO,MAAMW,QAAQ,GAAG,MAAOpB,KAAP,IAAiB;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,UAAZ,EAAuB;MAAEK,OAAO,EAAE;QAC5D,gBAAgB,kBAD4C;QAE5D,iBAAkB,UAASH,KAAM;MAF2B;IAAX,CAAvB,CAA5B;IAIA,MAAMI,OAAO,GAAGH,QAAQ,CAACI,IAAT,EAAhB;IACA,OAAOD,OAAP;EACD,CAPD,CAOE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,0BAAZ;EACD;AACF,CAXM"},"metadata":{},"sourceType":"module"}