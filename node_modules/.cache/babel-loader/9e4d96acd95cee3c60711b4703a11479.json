{"ast":null,"code":"// import React, { Fragment } from \"react\";\n// import { Paper, Button } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n// import Createpost from \"./CreatePost\";\n// import { deletePost } from '../api';\n// import \"./posts.css\"\n// const postMatches = (post, searchTerm) => {\n//     const searchTermLower = searchTerm.toLowerCase();\n//     const {\n//       description,\n//       location,\n//       title,\n//       author: { username },\n//     } = post;\n//     const toMatch = [description, location, title, username];\n//     for (let i = 0; i < toMatch.length; i++) {\n//       const field = toMatch[i];\n//       if (field.toLowerCase().includes(searchTermLower)) {\n//         return true;\n//       }\n//     }\n//   };\n// const Post = ({ posts, token, fetchPosts }) => {\n//     return (\n//         <div>\n//             <Button\n//                 className=\"create-post-button\"\n//                 variant=\"outlined\"\n//             >\n//             <Link className=\"create-post-link\" to=\"/createpost\" element={<Createpost />}>Create Post</Link>\n//             </Button>\n//             <input type=\"text\" placeholder=\"Search Posts\"></input>\n//             <Button\n//                 variant=\"outlined\"\n//             >Search</Button>\n//             {/* <input\n//           type=\"text\"\n//           placeholder=\"Search Posts\"\n//           value={searchTerm}\n//         //   onChange={(event) => {\n//         //     setSearchTerm(event.target.value);\n//         //   }\n//         ></input> */}\n//         {\n//             posts.map((post) => {\n//                 const { description, location, price, title, _id, isAuthor } = post\n//                 return (\n//                     <Paper\n//                     style={{margin:\"1rem\"}}\n//                     elevation={5}\n//                     key={_id}\n//                     >\n//                     <Fragment>\n//                     <div>\n//                         <h3>{title}</h3>\n//                         <p>Description: {description}</p>\n//                         <p>Price: {price}</p>\n//                         <p>Location: {location}</p>\n//                         {\n//                             isAuthor ? (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                     <Link \n//                                     className=\"edit-link\"\n//                                     to={`/posts/edit-post/${_id}`}\n//                                     >Edit</Link>\n//                                 </Button>\n//                             ) : (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                 <Link className=\"view-link\" to={`/posts/${_id}`}>View</Link>\n//                                 </Button>\n//                             )\n//                         }\n//                          {\n//                             isAuthor ? (\n//                                 <Button\n//                                     color=\"error\"\n//                                     variant=\"outlined\"\n//                                     onClick={() => {\n//                                         deletePost(_id, token)\n//                                         fetchPosts()\n//                                     }}\n//                                 >Delete</Button>\n//                             ) : (\n//                                 <p></p>\n//                             )\n//                         }\n//                     </div>\n//                     </Fragment>\n//                     </Paper>\n//                 )\n//             })\n//         }\n//         </div>\n//     )\n// }\n// export default Post\n// import React, { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import { SinglePost } from \"./SinglePost\";\n// import { callApi } from \"../api\";\n// const method = \"DELETE\";\n// const postMatches = (post, searchTerm) => {\n//   const searchTermLower = searchTerm.toLowerCase();\n//   const {\n//     description,\n//     location,\n//     title,\n//     author: { username },\n//   } = post;\n//   const toMatch = [description, location, title, username];\n//   for (let i = 0; i < toMatch.length; i++) {\n//     const field = toMatch[i];\n//     if (field.toLowerCase().includes(searchTermLower)) {\n//       return true;\n//     }\n//   }\n// };\n// const Posts = ({ posts, token, setPosts, userData }) => {\n//     const history = useHistory();\n//     const [searchTerm, setSearchTerm] = useState(\"\");\n//     const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n//     const handleSubmit = async (postId) => {\n//       const API_URL = `/posts/${postId}`;\n//       event.preventDefault();\n//       try {\n//         await callApi({\n//           url: API_URL,\n//           method: method,\n//           token: token,\n//         });\n//         const remainingPosts = posts.filter((post) => post._id !== postId);\n//         setPosts(remainingPosts);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n{\n  /* <>\n       <div id=\"posts-nav\">\n         <h2 className=\"page-title\">Posts</h2>\n         <input\n           type=\"text\"\n           placeholder=\"Search Posts\"\n           value={searchTerm}\n           onChange={(event) => {\n             setSearchTerm(event.target.value);\n           }}\n         ></input>\n       </div>\n       {postsToDisplay.length ? (\n         postsToDisplay.map((post) => (\n           <div\n             className=\"post-info\"\n             key={post._id}\n             style={{ border: \"2px solid black\" }}\n           >\n             <div id=\"title-button\">\n               <span className=\"post-title\">{post.title}</span>\n               <button onClick={() => history.push(`/posts/${post._id}`)}>\n                 Tell me more!\n               </button>\n             </div>\n             <div id=\"seller\">Seller: {post.author.username}</div>\n             <div className=\"location\">Location: {post.location}</div>\n             <div className=\"description\">Description: {post.description}</div>\n              {post.author.username === userData.username ? (\n               <button onClick={() => handleSubmit(post._id)}>\n                 Delete Post\n               </button>\n             ) : null}\n           </div>\n         ))\n       ) : (\n         <div>\n           <h1>There are no matching posts...</h1>\n         </div>\n       )}\n     </>\n  }; */\n}","map":{"version":3,"names":[],"sources":["/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/components/Posts.js"],"sourcesContent":["// import React, { Fragment } from \"react\";\n// import { Paper, Button } from \"@mui/material\";\n// import { Link } from \"react-router-dom\";\n// import Createpost from \"./CreatePost\";\n// import { deletePost } from '../api';\n// import \"./posts.css\"\n\n// const postMatches = (post, searchTerm) => {\n//     const searchTermLower = searchTerm.toLowerCase();\n//     const {\n//       description,\n//       location,\n//       title,\n//       author: { username },\n//     } = post;\n  \n//     const toMatch = [description, location, title, username];\n  \n//     for (let i = 0; i < toMatch.length; i++) {\n//       const field = toMatch[i];\n//       if (field.toLowerCase().includes(searchTermLower)) {\n//         return true;\n//       }\n//     }\n//   };\n\n\n// const Post = ({ posts, token, fetchPosts }) => {\n\n//     return (\n//         <div>\n//             <Button\n//                 className=\"create-post-button\"\n//                 variant=\"outlined\"\n//             >\n//             <Link className=\"create-post-link\" to=\"/createpost\" element={<Createpost />}>Create Post</Link>\n//             </Button>\n//             <input type=\"text\" placeholder=\"Search Posts\"></input>\n//             <Button\n//                 variant=\"outlined\"\n//             >Search</Button>\n//             {/* <input\n//           type=\"text\"\n//           placeholder=\"Search Posts\"\n//           value={searchTerm}\n//         //   onChange={(event) => {\n//         //     setSearchTerm(event.target.value);\n//         //   }\n//         ></input> */}\n//         {\n//             posts.map((post) => {\n//                 const { description, location, price, title, _id, isAuthor } = post\n//                 return (\n//                     <Paper\n//                     style={{margin:\"1rem\"}}\n//                     elevation={5}\n//                     key={_id}\n//                     >\n//                     <Fragment>\n//                     <div>\n//                         <h3>{title}</h3>\n//                         <p>Description: {description}</p>\n//                         <p>Price: {price}</p>\n//                         <p>Location: {location}</p>\n//                         {\n//                             isAuthor ? (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                     <Link \n//                                     className=\"edit-link\"\n//                                     to={`/posts/edit-post/${_id}`}\n//                                     >Edit</Link>\n//                                 </Button>\n//                             ) : (\n//                                 <Button\n//                                 variant=\"outlined\"\n//                                 >\n//                                 <Link className=\"view-link\" to={`/posts/${_id}`}>View</Link>\n//                                 </Button>\n//                             )\n//                         }\n//                          {\n//                             isAuthor ? (\n//                                 <Button\n//                                     color=\"error\"\n//                                     variant=\"outlined\"\n//                                     onClick={() => {\n//                                         deletePost(_id, token)\n//                                         fetchPosts()\n//                                     }}\n//                                 >Delete</Button>\n//                             ) : (\n//                                 <p></p>\n//                             )\n//                         }\n//                     </div>\n//                     </Fragment>\n//                     </Paper>\n//                 )\n//             })\n//         }\n//         </div>\n//     )\n// }\n\n// export default Post\n\n// import React, { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import { SinglePost } from \"./SinglePost\";\n// import { callApi } from \"../api\";\n\n// const method = \"DELETE\";\n\n// const postMatches = (post, searchTerm) => {\n//   const searchTermLower = searchTerm.toLowerCase();\n//   const {\n//     description,\n//     location,\n//     title,\n//     author: { username },\n//   } = post;\n\n//   const toMatch = [description, location, title, username];\n\n//   for (let i = 0; i < toMatch.length; i++) {\n//     const field = toMatch[i];\n//     if (field.toLowerCase().includes(searchTermLower)) {\n//       return true;\n//     }\n//   }\n// };\n\n// const Posts = ({ posts, token, setPosts, userData }) => {\n//     const history = useHistory();\n//     const [searchTerm, setSearchTerm] = useState(\"\");\n  \n//     const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n  \n//     const handleSubmit = async (postId) => {\n//       const API_URL = `/posts/${postId}`;\n//       event.preventDefault();\n//       try {\n//         await callApi({\n//           url: API_URL,\n//           method: method,\n//           token: token,\n//         });\n//         const remainingPosts = posts.filter((post) => post._id !== postId);\n//         setPosts(remainingPosts);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n{/* <>\n      <div id=\"posts-nav\">\n        <h2 className=\"page-title\">Posts</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search Posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div\n            className=\"post-info\"\n            key={post._id}\n            style={{ border: \"2px solid black\" }}\n          >\n            <div id=\"title-button\">\n              <span className=\"post-title\">{post.title}</span>\n              <button onClick={() => history.push(`/posts/${post._id}`)}>\n                Tell me more!\n              </button>\n            </div>\n            <div id=\"seller\">Seller: {post.author.username}</div>\n            <div className=\"location\">Location: {post.location}</div>\n            <div className=\"description\">Description: {post.description}</div>\n\n            {post.author.username === userData.username ? (\n              <button onClick={() => handleSubmit(post._id)}>\n                Delete Post\n              </button>\n            ) : null}\n          </div>\n        ))\n      ) : (\n        <div>\n          <h1>There are no matching posts...</h1>\n        </div>\n      )}\n    </>\n}; */}\n"],"mappings},"metadata":{},"sourceType":"module"}