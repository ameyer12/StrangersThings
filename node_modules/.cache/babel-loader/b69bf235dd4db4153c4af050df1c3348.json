{"ast":null,"code":"var _jsxFileName = \"/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/components/Posts.js\";\nimport React, { Fragment } from \"react\";\nimport { Paper, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport Createpost from \"./CreatePost\";\nimport { deletePost } from '../api';\nimport \"./posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: {\n      username\n    }\n  } = post;\n  const toMatch = [description, location, title, username];\n\n  for (let i = 0; i < toMatch.length; i++) {\n    const field = toMatch[i];\n\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Post = _ref => {\n  let {\n    posts,\n    token,\n    fetchPosts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"create-post-button\",\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"create-post-link\",\n        to: \"/createpost\",\n        element: /*#__PURE__*/_jsxDEV(Createpost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 74\n        }, this),\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), posts.map(post => {\n      const {\n        description,\n        location,\n        price,\n        title,\n        _id,\n        isAuthor\n      } = post;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          margin: \"1rem\"\n        },\n        elevation: 5,\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Description: \", description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), isAuthor ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"edit-link\",\n                to: `/posts/edit-post/${_id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"view-link\",\n                to: `/posts/${_id}`,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), isAuthor ? /*#__PURE__*/_jsxDEV(Button, {\n              color: \"error\",\n              variant: \"outlined\",\n              onClick: () => {\n                deletePost(_id, token);\n                fetchPosts();\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Post;\nexport default Post; // const handleSubmit = async () => {\n//     const results = await registerUser(username, password);\n//     if(results.success) {\n//         setToken(results.data.token)\n//         window.localStorage.setItem('token', results.data.token)\n//         navigate('/profile')\n//     } else {\n//         alert(\"User already exists. Please login instead.\")\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Fragment","Paper","Button","Link","Createpost","deletePost","postMatches","post","searchTerm","searchTermLower","toLowerCase","description","location","title","author","username","toMatch","i","length","field","includes","Post","posts","token","fetchPosts","map","price","_id","isAuthor","margin"],"sources":["/Users/AustinTheGOAT/Desktop/Fullstack-Academy/React-Strangers-Things-08302022/src/components/Posts.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { Paper, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport Createpost from \"./CreatePost\";\nimport { deletePost } from '../api';\nimport \"./posts.css\"\n\nconst postMatches = (post, searchTerm) => {\n    const searchTermLower = searchTerm.toLowerCase();\n    const {\n      description,\n      location,\n      title,\n      author: { username },\n    } = post;\n  \n    const toMatch = [description, location, title, username];\n  \n    for (let i = 0; i < toMatch.length; i++) {\n      const field = toMatch[i];\n      if (field.toLowerCase().includes(searchTermLower)) {\n        return true;\n      }\n    }\n  };\n\n\nconst Post = ({ posts, token, fetchPosts }) => {\n\n    return (\n        <div>\n            <Button\n                className=\"create-post-button\"\n                variant=\"outlined\"\n            >\n            <Link className=\"create-post-link\" to=\"/createpost\" element={<Createpost />}>Create Post</Link>\n            </Button\n    >\n            <input type=\"text\" placeholder=\"Search Posts\"></input>\n            <Button>Search</Button>\n            {/* <input\n          type=\"text\"\n          placeholder=\"Search Posts\"\n          value={searchTerm}\n        //   onChange={(event) => {\n        //     setSearchTerm(event.target.value);\n        //   }\n        ></input> */}\n        {\n            posts.map((post) => {\n                const { description, location, price, title, _id, isAuthor } = post\n                return (\n                    <Paper\n                    style={{margin:\"1rem\"}}\n                    elevation={5}\n                    key={_id}\n                    >\n                    <Fragment>\n                    <div>\n                        <h3>{title}</h3>\n                        <p>Description: {description}</p>\n                        <p>Price: {price}</p>\n                        <p>Location: {location}</p>\n                        {\n                            isAuthor ? (\n                                <Button\n                                variant=\"outlined\"\n                                >\n                                    <Link \n                                    className=\"edit-link\"\n                                    to={`/posts/edit-post/${_id}`}\n                                    >Edit</Link>\n                                </Button>\n                            ) : (\n                                <Button\n                                variant=\"outlined\"\n                                >\n                                <Link className=\"view-link\" to={`/posts/${_id}`}>View</Link>\n                                </Button>\n                            )\n                        }\n                         {\n                            isAuthor ? (\n                                <Button\n                                    color=\"error\"\n                                    variant=\"outlined\"\n                                    onClick={() => {\n                                        deletePost(_id, token)\n                                        fetchPosts()\n                                    }}\n                                >Delete</Button>\n                            ) : (\n                                <p></p>\n                            )\n                        }\n                    </div>\n                    </Fragment>\n                    </Paper>\n                )\n            })\n        }\n        </div>\n    )\n}\n\nexport default Post\n\n\n// const handleSubmit = async () => {\n//     const results = await registerUser(username, password);\n//     if(results.success) {\n//         setToken(results.data.token)\n//         window.localStorage.setItem('token', results.data.token)\n//         navigate('/profile')\n        \n//     } else {\n//         alert(\"User already exists. Please login instead.\")\n//     }\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}